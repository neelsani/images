name: Builds Raspbian
on:
  workflow_dispatch:
    inputs:
      image:
        description: base image type
        required: true
        type: choice
        options:
          - "raspbian-bullseye-armv6l"
          - "raspbian-bullseye-arm64"
          - "raspbian-bookworm-armv6l"
          - "raspbian-bookworm-arm64"
      packages: 
        default: ""
        required: true
      


jobs:
  build:
    runs-on: ubuntu-latest
    env:
      FIRST_USER_NAME: ${{ secrets.DUSER }}
      FIRST_USER_PASS: ${{ secrets.DPASSWORD }}
    steps:
      - name: Set branch based on image
        id: set_branch
        run: |
          if [[ ${{ github.event.inputs.image }} == "raspbian-bullseye-armv6l" ]]; then
            echo "::set-output name=branch::bullseye"
          elif [[ ${{ github.event.inputs.image }} == "raspbian-bullseye-arm64" ]]; then
            echo "::set-output name=branch::bullseye-arm64"
          elif [[ ${{ github.event.inputs.image }} == "raspbian-bookworm-armv6l" ]]; then
            echo "::set-output name=branch::master"
          else
            echo "::set-output name=branch::arm64"
          fi
        shell: bash

      - name: Checkout Pi-Gen
        uses: actions/checkout@v4
        with:
          repository: RPi-Distro/pi-gen
          ref: ${{ steps.set_branch.outputs.branch }}
      - name: Install Deps
        run:  sudo apt install coreutils quilt parted qemu-user-static debootstrap zerofree zip dosfstools libarchive-tools libcap2-bin grep rsync xz-utils file git curl bc gpg pigz xxd zip gzip tar -y
      - name: Add Packages to Image
        run: |
          cp -R stage2 stage2-base
          sed -i 's/-lite//g' stage2-base/EXPORT_IMAGE
          echo "" >> stage2-base/01-sys-tweaks/00-packages
          echo "${{ github.event.inputs.packages }}" | tr ',' '\n' >> stage2-base/01-sys-tweaks/00-packages
          cat stage2-base/01-sys-tweaks/00-packages

          touch config
          echo DEPLOY_COMPRESSION=xz >> config
          echo STAGE_LIST=\"stage0 stage1 stage2-base\" >> config
          echo IMG_NAME=base >> config
          echo DISABLE_FIRST_BOOT_USER_RENAME=1 >> config
          echo ENABLE_SSH=1 >> config
          echo KEYBOARD_KEYMAP=\"us\" >> config
          echo LOCALE_DEFAULT=\"en_US.UTF-8\" >> config
          echo TIMEZONE_DEFAULT=UTC >> config
          echo FIRST_USER_NAME=\'$FIRST_USER_NAME\' >> config
          echo FIRST_USER_PASS=\'$FIRST_USER_PASS\' >> config

          sudo ./build-docker.sh

      - name: Rename
        run: |
          for file in *.img.xz; do sudo mv "$file" ${{ github.event.inputs.image }}.img.xz && break; done
          sha256sum ${{ github.event.inputs.image }}.img.xz > ${{ github.event.inputs.image }}.sha256
      - name: Upload Stock Image
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.inputs.image }}.img.xz
          path: deploy/${{ github.event.inputs.image }}.img.xz
          compression-level: 0
      - name: Upload SHA-256
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.inputs.image }}.sha256
          path: deploy/${{ github.event.inputs.image }}.sha256
          compression-level: 0