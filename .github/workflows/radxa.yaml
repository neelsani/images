name: Builds radxa-zero
on:
  workflow_dispatch:
    inputs:
      image:
        description: base image type
        required: true
        type: choice
        options:
          - "radxa-zero-debian-bullseye-arm64"
      packages:
        default: ""
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.18"
      - name: Get Images Repo
        uses: actions/checkout@v4
        with:
          path: images

      - name: Setup `packer`
        uses: hashicorp/setup-packer@main
        id: setup
        with:
          version: "latest"
      - name: Get Packer Stuff
        uses: actions/checkout@v4
        with:
          repository: mkaczanowski/packer-builder-arm
          path: packer-builder-arm

      - name: Install Dependencies
        run: sudo apt install coreutils quilt parted qemu-user-static debootstrap zerofree zip dosfstools libarchive-tools libcap2-bin grep rsync xz-utils file git curl bc gpg pigz xxd zip gzip tar -y
      - name: Build Packer Arm Plugin
        run: |
          cd packer-builder-arm
          go mod download -x
          go build -x
          sudo chmod +x packer-builder-arm
          sudo mv packer-builder-arm ../images/.

      - name: Get Radxa rbuild
        uses: actions/checkout@v4
        with:
          repository: radxa-repo/rbuild
          path: rbuild
      - name: Build Base Image
        run: |
          cd rbuild
          chmod +x rbuild
          sudo chmod 0666 /dev/kvm
          ./rbuild --compress radxa-zero bullseye cli 
          sudo mv *.img.xz base.img.xz
          sudo mv base.img.xz ../images/.
      - name: Add Packages
        env:
          FIRST_USER_NAME: ${{ secrets.DUSER }}
          FIRST_USER_PASS: ${{ secrets.DPASSWORD }}
          daimg: ${{ github.event.inputs.image }}
        run: |
          cd images
          sudo sha256sum base.img.xz > base.sha256
          PACKAGES_WITH_SPACES=$(echo "${{ github.event.inputs.packages }}" | tr ',' ' ')
          echo "echo nameserver 8.8.8.8 > /etc/resolv.conf" >> setup.sh
          echo "useradd -p $(openssl passwd -1 $FIRST_USER_PASS) -m $FIRST_USER_NAME" >> setup.sh
          echo "apt-get update -y" >> setup.sh
          echo "apt-get upgrade -y" >> setup.sh
          echo "apt-get install $PACKAGES_WITH_SPACES -y" >> setup.sh
          sudo packer build radxa.json
          sudo mv *.img $daimg.img
      - name: Compress
        env:
          daimg: ${{ github.event.inputs.image }}
        run: |
          cd images
          sudo xz --compress --fast $daimg.img
          sudo sha256sum $daimg.img.xz > $daimg.sha256
      - name: Upload Updated
        env:
          daimg: ${{ github.event.inputs.image }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.env.daimg }}
          path: images/${{ github.env.daimg }}.img.xz
      - name: Upload SHA256
        env:
          daimg: ${{ github.event.inputs.image }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.env.daimg }}-sha256
          path: images/${{ github.env.daimg }}.sha256
